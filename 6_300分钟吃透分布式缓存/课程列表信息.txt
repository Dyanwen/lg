已发布: 36

59  ||  已发布  ||  开篇寄语：缓存，你真的用对了吗？  ||  b9b59196080c401695768e3303baa15e
160  ||  已发布  ||  第01讲：业务数据访问性能太低怎么办？  ||  850d6bcc26e542a6bf684c86ab82a7ba
161  ||  已发布  ||  第02讲：如何根据业务来选择缓存模式和组件？  ||  aeb57bcf4c364a8e8949115a85074320
162  ||  已发布  ||  第03讲：设计缓存架构时需要考量哪些因素？  ||  879b3ac6765e439aae204a85ed63ad71
163  ||  已发布  ||  第04讲：缓存失效、穿透和雪崩问题怎么处理？  ||  62e8c22d07a94cb6b842ef337b201ab7
164  ||  已发布  ||  第05讲：缓存数据不一致和并发竞争怎么处理？  ||  c7fb63fcd43c4febb897bffb29b2cb64
165  ||  已发布  ||  第06讲：Hot Key和Big Key引发的问题怎么应对？  ||  f68b6296dad842938b06e76ebd4f6c47
166  ||  已发布  ||  第07讲：MC为何是应用最广泛的缓存组件？  ||  99d0250e9a29413898845deb021b9305
167  ||  已发布  ||  第08讲：MC系统架构是如何布局的？  ||  f1388d3092e3401fa6c2d9ac1d20ac0c
168  ||  已发布  ||  第09讲：MC是如何使用多线程和状态机来处理请求命令的？  ||  6b8138df05b94bc6aab9da684d1fc66a
169  ||  已发布  ||  第10讲：MC是怎么定位key的?  ||  a5a938c1574348ecb73a5665e7a28ed9
170  ||  已发布  ||  第11讲：MC如何淘汰冷key和失效key?  ||  98cbf21c6c8847f583e578a1fd937c20
171  ||  已发布  ||  第12讲：为何MC能长期维持高性能读写？  ||  3cf6db21a2c9426d9e50a0588919e6c0
172  ||  已发布  ||  第13讲：如何完整学习MC协议及优化client访问？  ||  8e62a0419f9147eb8518782dcc7d76b1
173  ||  已发布  ||  第14讲：大数据时代，MC如何应对新的常见问题？  ||  0940eff197b44249a229aebd715170cf
174  ||  已发布  ||  第15讲：如何深入理解、应用及扩展 Twemproxy？  ||  928173d42d9f4d59a685e7990e57b04a
175  ||  已发布  ||  第16讲：常用的缓存组件Redis是如何运行的？  ||  f11e571974ba4d2bb8f5f87af4af1c48
176  ||  已发布  ||  第17讲：如何理解、选择并使用Redis的核心数据类型？  ||  5deb1d7a47534d8ba409f0500736439a
177  ||  已发布  ||  第18讲：Redis协议的请求和响应有哪些“套路”可循？  ||  407d7bdc13854ae19188d4ffa8dd25f9
199  ||  已发布  ||  第19讲：Redis系统架构中各个处理模块是干什么的？  ||  0c254ff500d9431580eb374b2031a295
200  ||  已发布  ||  第20讲：Redis如何处理文件事件和时间事件？  ||  a866436f1add475ca331d0d20b25eba0
201  ||  已发布  ||  第21讲：Redis读取请求数据后，如何进行协议解析和处理?  ||  29e6ad59b6bb4a99820be98e8819d20d
202  ||  已发布  ||  第22讲：怎么认识和应用Redis内部数据结构？  ||  4aba68b3cfa841ac92c3b26f92b98b7b
203  ||  已发布  ||  第23讲：Redis是如何淘汰key的？  ||  55e4b0f68bac471a8bcce30c2dcb227b
204  ||  已发布  ||  第24讲：Redis崩溃后，如何进行数据恢复的？  ||  dd05a71cbf624f68a7ec4d32821bd7cc
205  ||  已发布  ||  第25讲： Redis是如何处理容易超时的系统调用的？  ||  23d4ff79035844deb2c102aba96d708f
206  ||  已发布  ||  第26讲：如何大幅成倍提升Redis处理性能？  ||  4d5f869e649843ebbc3136bf95e24376
207  ||  已发布  ||  第27讲：Redis是如何进行主从复制的？  ||  73ad5731e9b047bfa746740eb30262f7
208  ||  已发布  ||  第28讲：如何构建一个高性能、易扩展的Redis集群？  ||  f2e3184764fe4996ae2a7f01b33c641e
209  ||  已发布  ||  第29讲：从容应对亿级QPS访问，Redis还缺少什么？  ||  b1b259363f1a495bad6b691ef62df1e8
210  ||  已发布  ||  第30讲：面对海量数据，为什么无法设计出完美的分布式缓存体系？  ||  2d47903287be496ab1056565f56a964d
211  ||  已发布  ||  第31讲：如何设计足够可靠的分布式缓存体系，以满足大中型移动互联网系统的需要？  ||  efeb335fac8847efb84b838d336a67f8
212  ||  已发布  ||  第32讲：一个典型的分布式缓存系统是什么样的？  ||  6724a319c9e84f0db8200a66a587d753
213  ||  已发布  ||  第33讲：如何为秒杀系统设计缓存体系？  ||  cee1caa972e74c019f9686f898c6e7fa
214  ||  已发布  ||  第34讲：如何为海量计数场景设计缓存体系？  ||  c2f13ab878d24c9eb3fd6139173f6afe
215  ||  已发布  ||  第35讲：如何为社交feed场景设计缓存体系？  ||  abd40103ce4649dca4be86c655bc5d3f
